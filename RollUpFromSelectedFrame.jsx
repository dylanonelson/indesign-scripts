splitUpwards();/* * Split a story after the selected text frame. The current text frame will * be threaded with the text frames before it, and the following text frame * will become the start of a new story. */function splitUpwards(){  var selection;  //Make certain that user interaction (display of dialogs, etc.) is turned on.  app.scriptPreferences.userInteractionLevel = UserInteractionLevels.interactWithAll;  if (    app.documents.length !== 0      && app.selection.length !== 0      && app.selection[0].constructor.name === 'TextFrame'  ) {    //Get the first item in the selection.    selection = app.selection[0];    splitStoryBefore(selection);  } else {    alert('Select one text frame to run this script.');  }}function splitStoryBefore(frame){  var dupeTextFrames = [],      originalTextFrames = [];      // Start at next frame      textFrame = frame.nextTextFrame;  while (textFrame !== null) {    originalTextFrames.push(textFrame);    // Duplicate each frame    dupeTextFrames.push(textFrame.duplicate());    // Loop to next threaded frame    textFrame = textFrame.nextTextFrame;  }  // Remove original text frames  while (originalTextFrames.length > 0) {    var originalTextFrame = originalTextFrames.pop(),        texts = originalTextFrame.texts,        emptyText = false;    // Remove original frame’s contents    while (texts.count() > 0 && emptyText === false) {      if (texts.item(0).length > 0) texts.item(0).remove();      else emptyText = true;    }    // Remove original frame    originalTextFrame.remove();  }  // Re-thread duplicated frames  for (var i = 0; i < dupeTextFrames.length - 1; i += 1) {    dupeTextFrames[i].nextTextFrame = dupeTextFrames[i + 1];  }}